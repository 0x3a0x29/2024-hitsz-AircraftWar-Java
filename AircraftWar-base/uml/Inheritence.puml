@startuml
'https://plantuml.com/class-diagram
interface BasicObserver
{
    +{abstract}response():void
}
BasicObserver <|.. AbstractEnemy
BasicObserver <|.. BaseBullet
abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    # power:int
    # direction:int
    # strategy:ShootStrategy
    + AbstractAircraft(int locationX, int locationY,
     int speedX, int speedY,int hp,int power,int direction)
    + decreaseHp(int decrease):void
    + increaseHp(int increase):void
    + getHp():int
    + getMaxHp():int
    + getPower():int
    + getDirection():int
    + setStrategy(ShootStrategy strategy):void
    + {abstract} shoot():List<BaseBullet>
 }
abstract class AbstractEnemy
{
     + AbstractAircraft(int locationX, int locationY, int speedX,
     int speedY, int hp,int power,int direction)
     + forward():void
}
AbstractAircraft <|-- AbstractEnemy
class EliteEnemy {
    + EliteEnemy(int locationX,int locationY,int speedX,
    int speedY,int hp,int power,int direction)
    + shoot():List<BaseBullet>
    + response():void
}

AbstractEnemy <|-- EliteEnemy
class SuperEliteEnemy {
    + SuperEliteEnemy(int locationX,int locationY,int speedX,
    int speedY,int hp,int power,int direction)
    + shoot():List<BaseBullet>
    + response():void
}

AbstractEnemy <|-- SuperEliteEnemy
class BossEnemy {
    + BossEnemy(int locationX,int locationY,int speedX,
    int speedY,int hp,int power,int direction)
    + shoot():List<BaseBullet>
    + response():void
}

AbstractEnemy <|-- BossEnemy
class MobEnemy {
    + MobEnemy(int locationX,int locationY,int speedX,
                  int speedY,int hp,int power,int direction)    + forward():void
    + shoot():List<BaseBullet>
    + response():void
}
AbstractEnemy <|-- MobEnemy

class HeroAircraft {
    + heroStateThread:Thread
    - {static} instance:HeroAircraft
    - {static} maxHp:int
    - HeroAircraft(int locationX,int locationY,int speedX,
                      int speedY,int hp,int power,int direction)
    + forward():void
    + shoot():List<BaseBullet>
    + {static} getInstance():HeroAircraft
}

AbstractAircraft <|-- HeroAircraft
HeroAircraft o--> HeroAircraft


abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
    + response():void
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
    + response():void
}

BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet

abstract class Item
{
    # observers:ArrayList
    +Item(int locationX, int locationY, int speedX, int speedY)
    +forward():void
    + attachObserver(BasicObserver observer):void
    + detachObserver(BasicObserver observer):void
    + {abstract} itemActive(HeroAircraft heroAircraft):void
}

AbstractFlyingObject <|--Item

class Blood
{
    - blood:int
    +Blood(int locationX, int locationY, int speedX, int speedY, int blood)
    +itemActive(HeroAircraft heroAircraft):void
    +getBlood():int
}

Item <|--Blood

class Bullet
{
    - bullet:int
    +Bullet(int locationX, int locationY, int speedX, int speedY, int bullet)
    +itemActive(HeroAircraft heroAircraft):void
    +getBullet():int
}

Item <|--Bullet
class BulletPlus
{
    - bulletPlus:int
    +BulletPlus(int locationX, int locationY, int speedX,
     int speedY, int bulletPlus)
    +itemActive(HeroAircraft heroAircraft):void
    +getBullet():int
}

Item <|--BulletPlus
class Bomb
{
    -bomb:int
    +Bomb(int locationX, int locationY, int speedX, int speedY, int bomb)
    +ItemActive(HeroAircraft heroAircraft):void
    +getBomb():int
}

Item <|--Bomb

@enduml